{"ast":null,"code":"var _jsxFileName = \"/Users/adityavijay/Desktop/ujjwalbhaiya/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Login from './components/Login';\nimport ToReadList from './components/ToReadList';\nimport Logout from './components/Logout';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [books, setBooks] = useState([]);\n  const handleLogin = () => {\n    setLoggedIn(true);\n    fetchToRead();\n  };\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setBooks([]);\n  };\n  const fetchToRead = async () => {\n    try {\n      const response = await fetch('/to-read', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setBooks(data);\n      } else {\n        console.error('Failed to fetch To Read list');\n      }\n    } catch (error) {\n      console.error('Failed to fetch To Read list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToReadList, {\n        books: books\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"SH43bUuWa/w99K7B3ESgIXfRVtE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","ToReadList","Logout","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","loggedIn","setLoggedIn","books","setBooks","handleLogin","fetchToRead","handleLogout","response","fetch","method","credentials","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","onLogin","_c","$RefreshReg$"],"sources":["/Users/adityavijay/Desktop/ujjwalbhaiya/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Login from './components/Login';\nimport ToReadList from './components/ToReadList';\nimport Logout from './components/Logout';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [books, setBooks] = useState([]);\n\n  const handleLogin = () => {\n    setLoggedIn(true);\n    fetchToRead();\n  };\n\n  const handleLogout = () => {\n    setLoggedIn(false);\n    setBooks([]);\n  };\n\n  const fetchToRead = async () => {\n    try {\n      const response = await fetch('/to-read', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setBooks(data);\n      } else {\n        console.error('Failed to fetch To Read list');\n      }\n    } catch (error) {\n      console.error('Failed to fetch To Read list:', error);\n    }\n  };\n\n  return (\n      <div>\n        {loggedIn ? (\n            <>\n              <ToReadList books={books} />\n              <Logout onLogout={handleLogout} />\n            </>\n        ) : (\n            <Login onLogin={handleLogin} />\n        )}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBH,WAAW,CAAC,IAAI,CAAC;IACjBI,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBL,WAAW,CAAC,KAAK,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,EAAE;QACvCC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCV,QAAQ,CAACS,IAAI,CAAC;MAChB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACIpB,OAAA;IAAAqB,QAAA,EACGhB,QAAQ,gBACLL,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA,CAACH,UAAU;QAACU,KAAK,EAAEA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5BzB,OAAA,CAACF,MAAM;QAAC4B,QAAQ,EAAEf;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAClC,CAAC,gBAEHzB,OAAA,CAACJ,KAAK;MAAC+B,OAAO,EAAElB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACrB,EAAA,CA3CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}